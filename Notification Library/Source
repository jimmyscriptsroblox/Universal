-- Please do not skid anything : (

local NotificationLibrary = {}
local TweenService = game:GetService("TweenService")
local SoundService = game:GetService("SoundService")

_G.ActiveNotifications = _G.ActiveNotifications or {}
local notifications = _G.ActiveNotifications
local maxNotifications, spacing = 5, 0.12

local function createScreenGui(name)
	local gui = Instance.new("ScreenGui")
	gui.Name = name
	gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	return gui
end

local function playSound()
	local sound = Instance.new("Sound")
	sound.SoundId = "rbxassetid://4590662766"
	sound.Volume = 1
	sound.Parent = SoundService
	sound:Play()
end

local function createFrame(gui, yPos, scale)
	local frame = Instance.new("Frame")
	frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	frame.Size = UDim2.new(0.5, 0, scale, 0)
	frame.Position = UDim2.new(-1, 0, yPos, 0)
	frame.AnchorPoint = Vector2.new(0, 0.5)
	frame.ZIndex = 100
	frame.Parent = gui

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 10)
	corner.Parent = frame

	return frame
end

local function createLabel(parent, text, size, position, font, textSize, color)
	local label = Instance.new("TextLabel")
	label.Text = text
	label.Size = size
	label.Position = position
	label.Font = font
	label.TextSize = textSize
	label.TextColor3 = color
	label.BackgroundTransparency = 1
	label.ZIndex = 101
	label.Parent = parent
	return label
end

local function tweenFrame(frame, targetPos, duration)
	local tween = TweenService:Create(frame, TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Position = targetPos })
	tween:Play()
	return tween
end

local function cleanup(frame, gui, yPos, delay)
	task.delay(delay, function()
		local exitTween = TweenService:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), { Position = UDim2.new(1.5, 0, yPos, 0) })
		exitTween:Play()
		exitTween.Completed:Wait()
		gui:Destroy()

		for i, notif in ipairs(notifications) do
			if notif.Frame == frame then
				table.remove(notifications, i)
				break
			end
		end

		for i, notif in ipairs(notifications) do
			local newY = 0.85 - ((i - 1) * spacing)
			tweenFrame(notif.Frame, UDim2.new(0.25, 0, newY, 0), 0.5)
		end
	end)
end

local function createNotification(title, message, duration, withButtons, buttons)
	local index = #notifications + 1
	local yPos = 0.85 - ((index - 1) * spacing)
	local guiName = withButtons and "ButtonNotificationScreen" or "NotificationScreen"
	local gui = createScreenGui(guiName)
	local scale = withButtons and 0.15 or 0.1
	local frame = createFrame(gui, yPos, scale)

	createLabel(frame, title, UDim2.new(1, 0, 0.4, 0), UDim2.new(0, 0, 0, 0), Enum.Font.GothamBold, 22, Color3.new(1, 1, 1))
	createLabel(frame, message, UDim2.new(1, 0, withButtons and 0.4 or 0.6, 0), UDim2.new(0, 0, 0.4, 0), Enum.Font.Gotham, 18, Color3.fromRGB(200, 200, 200))

	if withButtons and buttons then
		local btnSpacing, btnWidth = 0.15, 0.25
		for i, btnInfo in ipairs(buttons) do
			local btn = Instance.new("TextButton")
			btn.Text = btnInfo.text
			btn.Size = UDim2.new(btnWidth, 0, 0.3, 0)
			btn.Position = UDim2.new(0.1 + (i - 1) * (btnWidth + btnSpacing), 0, 0.7, 0)
			btn.BackgroundColor3 = Color3.fromRGB(0, 122, 255)
			btn.TextColor3 = Color3.new(1, 1, 1)
			btn.Font = Enum.Font.Gotham
			btn.TextSize = 18
			btn.ZIndex = 102
			btn.Parent = frame

			btn.MouseButton1Click:Connect(function()
				if btnInfo.callback then
					btnInfo.callback()
				end
				gui:Destroy()
			end)
		end
	end

	playSound()
	tweenFrame(frame, UDim2.new(0.25, 0, yPos, 0), 0.5)
	table.insert(notifications, { Frame = frame, ScreenGui = gui })
	cleanup(frame, gui, yPos, duration)
end

function NotificationLibrary:Notify(title, message, duration)
	duration = duration or 5
	if #notifications >= maxNotifications then
		return
	end
	createNotification(title, message, duration, false)
end

function NotificationLibrary:NotifyWithButtons(title, message, buttons, duration)
	duration = duration or 5
	if #notifications >= maxNotifications then
		return
	end
	createNotification(title, message, duration, true, buttons)
end

return NotificationLibrary
